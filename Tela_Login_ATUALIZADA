package com.example.parkinglots

import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Switch
import android.text.Editable
import android.text.TextWatcher
import android.text.method.PasswordTransformationMethod
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.auth.FirebaseAuthInvalidCredentialsException
import com.google.firebase.auth.FirebaseAuthInvalidUserException

class MainActivity : AppCompatActivity() {
    private lateinit var auth: FirebaseAuth

    lateinit var btnentrar : Button
    lateinit var btncriarconta: Button
    lateinit var btnesqueceusenha: Button
    lateinit var EditEmail: EditText

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        auth = FirebaseAuth.getInstance()

        btnentrar = findViewById(R.id.btnEntrar)
        btncriarconta = findViewById(R.id.btnCriarConta)
        btnesqueceusenha = findViewById(R.id.btnEsqueceuSenha)
        EditEmail = findViewById(R.id.edtEmail)
        btncriarconta.setOnClickListener { Cadastrar() }
        btnesqueceusenha.setOnClickListener{ EsqueceuSenha() }

        var EditSenha = findViewById<EditText>(R.id.edtSenha)
        var VerSenha = findViewById<Switch>(R.id.VerSenha)

        VerSenha.setOnCheckedChangeListener{_, isChecked ->
            if (isChecked) {
                EditSenha.transformationMethod = null
            } else {
                EditSenha.transformationMethod = PasswordTransformationMethod.getInstance()
            }
        }

        EditSenha.addTextChangedListener(object : TextWatcher {
            override fun afterTextChanged(s: Editable?) {}

            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}

            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {
                val selectionStart: Int = EditSenha.selectionStart
                val selectionEnd: Int = EditSenha.selectionEnd

                EditSenha.transformationMethod =
                    if (VerSenha.isChecked) null else PasswordTransformationMethod.getInstance()

                EditSenha.setSelection(selectionStart, selectionEnd)
            }
        })

        btnentrar.setOnClickListener {
            val email = EditEmail.text.toString()
            val password = EditSenha.text.toString()

            if (email.isNotEmpty() && password.isNotEmpty()) {
                signIn(email, password)
            } else {
                Toast.makeText(this, "Preencha todos os campos", Toast.LENGTH_SHORT).show()
            }
        }
    }

    fun Cadastrar(){
        startActivity(Intent(this, tela_cadastro::class.java))
    }

    fun EsqueceuSenha(){
        startActivity(Intent(this, esqueceu_senha::class.java))
    }

    private fun signIn(email: String, password: String) {
        auth.signInWithEmailAndPassword(email, password)
            .addOnCompleteListener(this) { task ->
                if (task.isSuccessful) {

                    startActivity(Intent(this, tela_home::class.java))
                } else {

                    val errorMessage = when (task.exception) {
                        is FirebaseAuthInvalidUserException -> "Usuário não encontrado"
                        is FirebaseAuthInvalidCredentialsException -> "Credenciais inválidas"
                        else -> "Erro desconhecido, tente novamente"
                    }
                    Toast.makeText(this, errorMessage, Toast.LENGTH_SHORT).show()
                }
            }
    }
}
